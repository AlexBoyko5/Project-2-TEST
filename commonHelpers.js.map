{"version":3,"file":"commonHelpers.js","sources":["../src/render.js","../src/main.js","../src/js/heder.js"],"sourcesContent":["// import axios from 'axios';\n\n// export async function booksApi() {\n//     const BASE_URL = 'https://books-backend.p.goit.global/books/category-list';\n\n//     //   const url = ${BASE_URL};\n\n//     const options = {\n//         method: 'GET',\n//     };\n\n//     const res = await axios.get(`${BASE_URL}`, options);\n//     return res.data;\n// }\n\n// console.log(booksApi());\n\n// export async function loadBooks(category) {\n//     const BASE_URL = 'https://books-backend.p.goit.global/books/category';\n\n//     const options = {\n//         method: 'GET',\n//         params: {\n//             category: category,\n//         },\n//     };\n\n//     const res = await axios.get(BASE_URL, options);\n//     return res.data;\n// }\n\n// console.log(loadBooks('Combined Print and E-Book Nonfiction'));\n\n// export async function loadBooksAllCat() {\n//     try {\n//         const categories = await categoryList();\n//         for (const category of categories) {\n//             console.log(`Category: ${category.list_name}`);\n//             const data = await topBooks(category.list_name);\n//             renderBooksAll(data, category.list_name);\n//             console.log('Books:');\n//             console.log(data);\n//         }\n//     } catch (error) {\n//         console.error('Error fetching data:', error);\n//     }\n// };\n/!==========================================================================================/\n\nexport async function categoryList() {\n    const URL = 'https://books-backend.p.goit.global/books/category-list';\n\n    const options = {\n        method: 'GET',\n    };\n\n    const res = await axios.get(URL, { options });\n    return res.data;\n}\n\nimport axios from 'axios';\n// import { categoryList } from '../books API/books-api';\n\nconst booksContainer = document.querySelector('.books-container');\nconst categoryOne = document.querySelector('.container-category-one');\n\nlet page;\n\nasync function booksByCategory(selectedCategory) {\n    const BASE_URL = 'https://books-backend.p.goit.global/books/category';\n    const encodeCat = encodeURIComponent(selectedCategory);\n    const url = `${BASE_URL}?category=${encodeCat}`;\n    const options = {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n    };\n    const res = await axios.get(url, options);\n    return res.data;\n}\n\nasync function topBooks() {\n    const BASE_URL = 'https://books-backend.p.goit.global/books/top-books';\n\n    const options = {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n    };\n\n    const res = await axios.get(BASE_URL, options);\n    return res.data;\n};\n\nfunction templateBook(book) {\n    return `<li class=\"book-item\" data-id=\"${book.id}\">\n  <img src=\"${book.book_image}\" alt=\"${book.description}\" srcset=\"${book.book_image}\" width=\"335\" height=\"535\" class=\"book-image\">\n  <p class=\"book-title\">${book.title}</p>\n  <p class=\"book-author\">${book.author}</p>\n</li>`;\n};\n\nfunction templateBooks(books) {\n    return books.map(templateBook).join('');\n};\n\nfunction renderBooks(books, category) {\n    const markup = `<h3 class=\"container-category-one\">${category}</h3>` + templateBooks(books);\n    booksContainer.innerHTML = markup;\n};\n\nfunction renderBooksAll(books, category) {\n    const title = `<h2 class=\"container-title\">Best Sellers <span>Book</span></h2>`;\n    const markup = `<h3 class=\"container-category-all\">${category}</h3>` + templateBooks(books);\n    booksContainer.innerHTML = title + markup;\n};\n\nexport async function loadBooks(selectedCategory) {\n    try {\n        const data = await booksByCategory(selectedCategory);\n        renderBooks(data, selectedCategory);\n    } catch (error) {\n        console.error(error);\n    }\n};\n\nexport async function loadBooksAllCat() {\n    try {\n        const categories = await categoryList();\n        for (const category of categories) {\n            console.log(`Category: ${category.list_name}`);\n            const data = await topBooks(category.list_name);\n            renderBooksAll(data, category.list_name);\n            console.log('Books:');\n            console.log(data);\n        }\n    } catch (error) {\n        console.error('Error fetching data:', error);\n    }\n};","\nimport axios from 'axios';\n\n//!======== Шаг №1 =============================================================\n// document.addEventListener(\"DOMContentLoaded\", function () {\n//     const categoryList = document.getElementById(\"category-list\"); //сылка на список категорий\n//     const categories = api(); //тут наверное api для категорий\n//     // заполняем/проходим по категориям\n//     categories.forEach(function (category) {\n//         const li = document.createElement('li'); // создаем 'li'\n//         li.textContent = category.list_name; // задаем текст категории\n//         categoryList.appendChild(li); // добавляем елемент в список\n//     });\n// });\n\n//!======== Шаг №2 ====добавл fetch()  ==============================================\n\n// document.addEventListener(\"DOMContentLoaded\", function () {\n//     const categoryList = document.getElementById(\"category-list\"); //сылка на список категорий\n//     fetch('https://books-backend.p.goit.global/books/category-list')\n//         .then(response => response.json()) // Преобразование ответа в JSON\n//         .then(categories => { // Проходим по категориям\n//             categories.forEach(function (category) {\n//                 const li = document.createElement('li'); // создаем 'li'\n//                 li.textContent = category.list_name; // задаем текст категории\n//                 categoryList.appendChild(li); // добавляем елемент в список\n//             });\n//         })\n// });\n\n//!======== Шаг №3 ==== меняем fetch() на Axios ==============================================\n\n// document.addEventListener(\"DOMContentLoaded\", function () {\n//     const categoryList = document.getElementById(\"category-list\"); //сылка на список категорий\n//     axios.get('https://books-backend.p.goit.global/books/category-list')\n//         .then(response => {\n//             const categories = response.data //днные из ответа\n//             categories.forEach(function (category) {\n//                 const li = document.createElement('li'); // создаем 'li'\n//                 li.textContent = category.list_name; // задаем текст категории\n//                 categoryList.appendChild(li); // добавляем елемент в список\n//             });\n//         })\n//         .catch(error => {\n//             console.error('Error fetching data;', error);\n//         })\n// });\n\n//!======== Шаг №4 ==== берем API из другого файла ==============================================\n// import { booksApi } from './render'; // импорт Api\n\n// document.addEventListener(\"DOMContentLoaded\", function () {\n\n//     const categoryList = document.getElementById(\"category-list\"); //сылка на список категорий\n//     booksApi().then(categories => { // используем функцию booksApi для получения данных\n//         categories.forEach(function (category) {\n//             const li = document.createElement('li'); // создаем 'li'\n//             li.textContent = category.list_name; // задаем текст категории\n//             categoryList.appendChild(li); // добавляем елемент в список\n//         });\n//     })\n//         .catch(error => {\n//             console.error('Error fetching data;', error);\n//         })\n// });\n\n//!======== Шаг №5 ==== названия категорий делаем кнопкой/ссылкой ==============================================\n\n// import { booksApi } from './render'; // импорт Api\n\n// document.addEventListener(\"DOMContentLoaded\", function () {\n\n//     const categoryList = document.getElementById(\"category-list\"); //сылка на список категорий\n//     booksApi().then(categories => {\n//         console.log(categories);\n//         categories.forEach(function (category) {\n//             const li = document.createElement('li');\n//             li.textContent = category.list_name; // задаем текст категории\n//             li.addEventListener('click', function () { // обработчик событий на клик\n//                 document.getElementById('container').innerHTML = ''; //Очищаем контейнер перед отображением новых данных\n//                 booksApibyCategory(category.list_name) // Получаем книги по выбранной категории\n//                     .then(books => { // Получаем книги по выбранной категории\n//                         books.forEach(book => {\n//                             const bookElement = document.createElement('div'); // Создаем элемент для каждой книги\n//                             bookElement.textContent = book.title; // или book.name что у нас в массиве?\n//                             document.getElementById('container').appendChild(bookElement);\n//                         });\n//                     });\n//             });\n\n//             categoryList.appendChild(li);\n//         });\n//     }).catch(error => {\n//         console.error('Error fetching data;', error);\n//     });\n// });\n\n//!======== Шаг №6 ==== меняем <li> на <p> === с комментарием ===========================================\n\n// import { booksApi } from './render';\n\n// document.addEventListener(\"DOMContentLoaded\", function () { // Слушаем событие загрузки DOM\n//     const categoryList = document.getElementById(\"category-list\"); // Получаем элемент списка категорий по его id\n\n//     booksApi().then(categories => { // Вызываем функцию booksApi, которая возвращает промис с категориями\n//         categories.forEach(function (category) { // Проходимся по каждой категории\n//             const paragraph = document.createElement('p'); // Используем тег р вместо li\n//             paragraph.textContent = category.list_name; // Задаем текст элемента р равным названию категории\n\n//             paragraph.addEventListener('click', function () {      // Добавляем обработчик клика на элемент р\n//                 document.getElementById('container').innerHTML = ''; // Очищаем содержимое элемента с id 'container'\n\n//                 booksApibyCategory(category.list_name).then(books => { // Вызываем функцию booksApibyCategory с названием категории в качестве аргумента\n//                     books.forEach(book => { // Перебираем каждую книгу в полученном списке книг\n//                         const bookElement = document.createElement('div'); // Создаем новый элемент div для отображения информации о книге\n//                         bookElement.textContent = book.title; // Задаем текст элемента равным названию книги\n//                         document.getElementById('container').appendChild(bookElement);  // Добавляем созданный элемент div в контейнер с id 'container'\n//                     });\n//                 });\n//             });\n\n//             categoryList.appendChild(paragraph); // Добавляем созданный элемент р в список категорий\n//         });\n//     }).catch(error => {\n//         console.error('Error fetching data;', error);\n//     });\n// });\n\n//!======== Шаг №6 ==== меняем <li> на <p> ===============================================\n\n// import { booksApi } from './render';\n\n// document.addEventListener(\"DOMContentLoaded\", function () {\n//     const categoryList = document.getElementById(\"category-list\");\n\n//     booksApi().then(categories => {\n//         categories.forEach(function (category) {\n//             const paragraph = document.createElement('p');\n//             paragraph.textContent = category.list_name;\n\n//             paragraph.addEventListener('click', function (event) {\n//                 event.preventDefault();\n//                 document.getElementById('container').innerHTML = '';\n//                 booksApibyCategory(category.list_name).then(books => {\n//                     books.forEach(book => {\n//                         const bookElement = document.createElement('div');\n//                         bookElement.textContent = book.title;\n//                         document.getElementById('container').appendChild(bookElement);\n//                     });\n//                 });\n//             });\n\n//             categoryList.appendChild(paragraph);\n//         });\n//     }).catch(error => {\n//         console.error('Error fetching data;', error);\n//     });\n// });\n\n//!======== Шаг №7 ==== добавл \"ALL CATEGORIES\" в начало списка  ===============================================\n\n// import { booksApi } from './render';\n// //import { loadBooks } from './render';// Внести в проект\n// document.addEventListener(\"DOMContentLoaded\", function () {\n//     const categoryList = document.getElementById(\"category-list\");\n\n//     const title = document.createElement('li');  // Создаем новый элемент 'li' для заголовка\n//     title.textContent = \"ALL CATEGORIES\";\n//     title.id = \"title\"; // присваиваем \"title\" свой id\n//     categoryList.appendChild(title); // Добавляем заголовок в начало списка категорий\n\n//     booksApi().then(categories => {\n//         categories.forEach(function (category) {\n//             const paragraph = document.createElement('p');\n//             paragraph.textContent = category.list_name;\n//             paragraph.id = \"p-list\";\n\n//             paragraph.addEventListener('click', function () {\n//                 document.getElementById('container').innerHTML = '';\n//                 booksApibyCategory(category.list_name).then(books => {\n//                     books.forEach(book => {\n//                         const bookElement = document.createElement('div');\n//                         bookElement.textContent = book.title;\n//                         document.getElementById('container').appendChild(bookElement);\n//                     });\n//                 });\n//             });\n\n//             categoryList.appendChild(paragraph); // Добавляем элемент в список внутри цикла\n//         });\n//     }).catch(error => {\n//         console.error('Error fetching data;', error);\n//     });\n// });\n\n//!======== Шаг №8 ==== замена перв addEventListener на window.onload == отрисовка списка <p> по новому ======================\n\n// import { booksApi } from './render';\n// import { loadBooks } from './render';\n// window.onload = function () {\n//     const categoryList = document.getElementById(\"category-list\"); //сылка на список категорий\n//     const title = document.createElement('li');\n//     title.textContent = \"ALL CATEGORIES\";\n//     title.id = \"title\";\n//     categoryList.appendChild(title);\n//     booksApi().then(categories => { // Вызываем функцию booksApi, которая возвращает промис с категориями\n//         categories.forEach(function (category) { // Проходимся по каждой категории\n//             const paragraph = document.createElement('p'); // создаем <p> для кажд элем списка\n//             paragraph.textContent = category.list_name;\n//             paragraph.id = \"p-list\";\n//             categoryList.appendChild(paragraph); // Добавляем элемент в список внутри цикла\n//         });\n//     }).catch(error => {\n//         console.error('Error fetching data;', error);\n//     });\n//     paragraph.addEventListener('click', loadBooks); //Вызываем функцию loadBooks при клике на элемент\n// };\n//!======== Шаг №9 ======= вернул paragraph.addEvent на место =========================================================================================\n\n// import { booksApi } from './render';\n// import { loadBooks } from './render';\n// window.onload = function () {\n//     const categoryList = document.getElementById(\"category-list\"); //сылка на список категорий\n//     const title = document.createElement('li');\n//     title.textContent = \"ALL CATEGORIES\";\n//     title.id = \"title\";\n//     categoryList.appendChild(title);\n//     booksApi().then(categories => { // Вызываем функцию booksApi, которая возвращает промис с категориями\n//         categories.forEach(function (category) { // Проходимся по каждой категории\n//             const paragraph = document.createElement('p'); // создаем <p> для кажд элем списка\n//             paragraph.textContent = category.list_name;\n//             paragraph.id = \"p-list\";\n//             paragraph.addEventListener('click', loadBooks); //Вызываем функцию loadBooks при клике на элемент\n//             categoryList.appendChild(paragraph); // Добавляем элемент в список внутри цикла\n//         });\n//     }).catch(error => {\n//         console.error('Error fetching data;', error);\n//     });\n// };\n\n//!======== Шаг №10 === добавл .active для смены цвета на <p> ========================================================\n\n// import { booksApi } from './render';\n// import { loadBooks } from './render';\n// window.onload = function () {\n//     const categoryList = document.getElementById(\"category-list\"); //сылка на список категорий\n//     const title = document.createElement('li');\n//     title.textContent = \"ALL CATEGORIES\";\n//     title.id = \"title\";\n//     categoryList.appendChild(title);\n//     booksApi().then(categories => { // Вызываем функцию booksApi, которая возвращает промис с категориями\n//         categories.forEach(function (category) {\n//             const paragraph = document.createElement('p');\n//             paragraph.textContent = category.list_name;\n//             paragraph.id = \"p-list\";\n//             categoryList.appendChild(paragraph);\n//             // обработчик событий 'click', который вызывает функцию 'loadBooks' и добавляет класс 'active'\n//             paragraph.addEventListener('click', function () {\n//                 paragraph.classList.add('active');\n//                 loadBooks();\n//             });\n//         });\n//     }).catch(error => {\n//         console.error('Error fetching data;', error);\n//     });\n// };\n//!======== Шаг №11 === добавл код от Марии =============================================\n\n// import { booksApi } from './render';\n// import { loadBooks } from './render';\n\n// const categoryBlock = document.querySelector(\"#category-list\"); // Получаем элемент с id \"category-list\"\n// export default categoryBlock; // Экспортируем categoryBlock как default\n\n// window.onload = function () { // Когда окно загрузится, выполниться следующая функция\n//     const myCategoryList = document.getElementById(\"category-list\"); // Получаем элемент с id \"category-list\"\n//     const title = document.createElement('li'); // Создаем новый элемент списка 'li'\n//     title.textContent = \"ALL CATEGORIES\"; // Устанавливаем текст элемента\n//     title.id = \"title\"; // Устанавливаем id элемента\n//     myCategoryList.appendChild(title); // Добавляем созданный элемент в список\n//     booksApi().then(categories => {  // Вызываем функцию booksApi и обрабатываем промис\n//         categories.forEach(function (category) { // Для каждой категории выполняем функцию\n//             const paragraph = document.createElement('p'); // создаем <p> для кажд элем списка\n//             paragraph.textContent = category.list_name; // Устанавливаем текст элемента равным имени категории\n//             paragraph.id = \"p-list\"; // Устанавливаем id элемента\n//             paragraph.addEventListener('click', loadBooks); //Вызываем функцию loadBooks при клике на элемент\n//             myCategoryList.appendChild(paragraph); // Добавляем созданный элемент в список\n//         });\n//     }).catch(error => {\n//         console.error('Error fetching data;', error);\n//     });\n// };\n//!======== Шаг №12 === добавл код от Марии 2 =============================================\n\n// import { categoryList } from './render';\n// import { loadBooks } from './render';\n// import { loadBooksAllCat } from './render';\n\n// const categoryBlock = document.querySelector('#category-list');\n\n// window.onload = function () {\n//     const myCategoryList = document.getElementById('category-list');\n//     const title = document.createElement('li');\n//     title.textContent = 'ALL CATEGORIES';\n//     title.id = 'title';\n//     myCategoryList.appendChild(title);\n//     categoryList()\n//         .then(categories => {\n//             categories.forEach(function (category) {\n//                 const paragraph = document.createElement('p'); // создаем <p> для кажд элем списка\n//                 paragraph.textContent = category.list_name;\n//                 paragraph.classList.add('p-list');\n//                 myCategoryList.appendChild(paragraph);\n//             });\n//         })\n//         .catch(error => {\n//             console.error('Error fetching data;', error);\n//         });\n// };\n\n// categoryBlock.addEventListener('click', async event => {\n//     event.preventDefault();\n//     if (event.target.tagName === 'P') {\n//         const selectedCategory = event.target.textContent;\n//         loadBooks(selectedCategory);\n//     } else if (event.target.tagName === 'Li') {\n//         loadBooksAllCat();\n//     }\n// });\n\n//!======== Шаг №13 ===  Мария вариант 2 ==== здесь const myCategoryList =========================================\n\n// import { categoryList } from './render';\n// import { loadBooks } from './render';\n// import { loadBooksAllCat } from './render';\n\n// const categoryBlock = document.querySelector('#category-list');\n\n// window.onload = function () {\n//     const myCategoryList = document.getElementById('category-list');\n//     const title = document.createElement('li');\n//     title.textContent = 'ALL CATEGORIES';\n//     title.id = 'title';\n//     myCategoryList.appendChild(title);\n//     categoryList()\n//         .then(categories => {\n//             categories.forEach(function (category) {\n//                 const paragraph = document.createElement('p'); // создаем <p> для кажд элем списка\n//                 paragraph.textContent = category.list_name;\n//                 paragraph.classList.add('p-list');\n//                 myCategoryList.appendChild(paragraph);\n//             });\n//         })\n//         .catch(error => {\n//             console.error('Error fetching data;', error);\n//         });\n//     title.addEventListener('click', async event => {\n//         event.preventDefault();\n//         if (event.target.tagName === 'Li');\n//         loadBooksAllCat();\n//     });\n// };\n\n// categoryBlock.addEventListener('click', async event => {\n//     event.preventDefault();\n//     if (event.target.tagName === 'P') {\n//         const selectedCategory = event.target.textContent;\n//         loadBooks(selectedCategory);\n//     }\n// });\n\n//!======== Шаг №13 ===  Мария вариант 3 =============================================\n\nimport { categoryList } from './render';\nimport { loadBooks } from './render';\nimport { loadBooksAllCat } from './render';\n\nconst categoryBlock = document.querySelector('#category-list');\n\nwindow.onload = function () {\n    const myCategoryList = document.getElementById('category-list');\n    const title = document.createElement('li');\n    title.textContent = 'ALL CATEGORIES';\n    title.id = 'title';\n    // ! ===================================================\n    title.addEventListener('click', function () {\n        window.location.href = './index.html'; // Перенаправление на главную страницу\n    });\n    // ! ===================================================\n    myCategoryList.appendChild(title);\n    categoryList()\n        .then(categories => {\n            categories.forEach(function (category) {\n                const paragraph = document.createElement('p'); // создаем <p> для кажд элем списка\n                paragraph.textContent = category.list_name;\n                paragraph.classList.add('p-list');\n                myCategoryList.appendChild(paragraph);\n            });\n        })\n        .catch(error => {\n            console.error('Error fetching data;', error);\n        });\n    loadBooksAllCat();\n};\n\ncategoryBlock.addEventListener('click', async event => {\n    event.preventDefault();\n    if (event.target.tagName === 'P') {\n        const selectedCategory = event.target.textContent;\n        loadBooks(selectedCategory);\n    } else if (event.target.id === 'title') {\n        loadBooksAllCat();\n        console.log(loadBooksAllCat());\n    }\n});","const themeToggle = document.getElementById(\"theme-toggle\");\nconst body = document.body;\n\nthemeToggle.addEventListener(\"change\", () => {\n    if (themeToggle.checked) {\n        body.classList.add(\"dark\");\n        body.classList.remove(\"light\");\n    } else {\n        body.classList.add(\"light\");\n        body.classList.remove(\"dark\");\n    }\n});\n\n//=================================menu===============//\n\n\n(() => {\n    const mobileMenu = document.querySelector('.js-menu-container');\n    const openMenuBtn = document.querySelector('.js-open-menu');\n    const closeMenuBtn = document.querySelector('.js-close-menu');\n    const closeMenuLink = document.querySelectorAll('.header-link');\n\n    const toggleMenu = () => {\n        const isMenuOpen =\n            openMenuBtn.getAttribute('aria-expanded') === 'true' || false;\n        openMenuBtn.setAttribute('aria-expanded', !isMenuOpen);\n        mobileMenu.classList.toggle('is-open');\n\n        const scrollLockMethod = !isMenuOpen\n            ? 'disableBodyScroll'\n            : 'enableBodyScroll';\n        bodyScrollLock[scrollLockMethod](document.body);\n    };\n    closeMenuLink.forEach(item => item.addEventListener('click', toggleMenu));\n    openMenuBtn.addEventListener('click', toggleMenu);\n    closeMenuBtn.addEventListener('click', toggleMenu);\n\n    // Close the mobile menu on wider screens if the device orientation changes\n    window.matchMedia('(min-width: 768px)').addEventListener('change', e => {\n        if (!e.matches) return;\n        mobileMenu.classList.remove('is-open');\n        openMenuBtn.setAttribute('aria-expanded', false);\n        bodyScrollLock.enableBodyScroll(document.body);\n    });\n})();"],"names":["categoryList","URL","options","axios","booksContainer","booksByCategory","selectedCategory","BASE_URL","encodeCat","url","topBooks","templateBook","book","templateBooks","books","renderBooks","category","markup","renderBooksAll","title","loadBooks","data","error","loadBooksAllCat","categories","categoryBlock","myCategoryList","paragraph","event","themeToggle","body","mobileMenu","openMenuBtn","closeMenuBtn","closeMenuLink","toggleMenu","isMenuOpen","scrollLockMethod","item","e"],"mappings":"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"}