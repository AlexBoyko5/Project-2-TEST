{"version":3,"file":"commonHelpers.js","sources":["../src/render.js","../src/main.js","../src/js/heder.js"],"sourcesContent":["import axios from 'axios';\n\nexport async function booksApi() {\n    const BASE_URL = 'https://books-backend.p.goit.global/books/category-list';\n\n    //   const url = ${BASE_URL};\n\n    const options = {\n        method: 'GET',\n    };\n\n    const res = await axios.get(`${BASE_URL}`, options);\n    return res.data;\n}\n\nconsole.log(booksApi());\n\nexport async function loadBooks(category) {\n    const BASE_URL = 'https://books-backend.p.goit.global/books/category';\n\n    const options = {\n        method: 'GET',\n        params: {\n            category: category,\n        },\n    };\n\n    const res = await axios.get(BASE_URL, options);\n    return res.data;\n}\n\nconsole.log(loadBooks('Combined Print and E-Book Nonfiction'));","\nimport axios from 'axios';\n\n//!======== Шаг №1 =============================================================\n// document.addEventListener(\"DOMContentLoaded\", function () {\n//     const categoryList = document.getElementById(\"category-list\"); //сылка на список категорий\n//     const categories = api(); //тут наверное api для категорий\n//     // заполняем/проходим по категориям\n//     categories.forEach(function (category) {\n//         const li = document.createElement('li'); // создаем 'li'\n//         li.textContent = category.list_name; // задаем текст категории\n//         categoryList.appendChild(li); // добавляем елемент в список\n//     });\n// });\n\n//!======== Шаг №2 ====добавл fetch()  ==============================================\n\n// document.addEventListener(\"DOMContentLoaded\", function () {\n//     const categoryList = document.getElementById(\"category-list\"); //сылка на список категорий\n//     fetch('https://books-backend.p.goit.global/books/category-list')\n//         .then(response => response.json()) // Преобразование ответа в JSON\n//         .then(categories => { // Проходим по категориям\n//             categories.forEach(function (category) {\n//                 const li = document.createElement('li'); // создаем 'li'\n//                 li.textContent = category.list_name; // задаем текст категории\n//                 categoryList.appendChild(li); // добавляем елемент в список\n//             });\n//         })\n// });\n\n//!======== Шаг №3 ==== меняем fetch() на Axios ==============================================\n\n// document.addEventListener(\"DOMContentLoaded\", function () {\n//     const categoryList = document.getElementById(\"category-list\"); //сылка на список категорий\n//     axios.get('https://books-backend.p.goit.global/books/category-list')\n//         .then(response => {\n//             const categories = response.data //днные из ответа\n//             categories.forEach(function (category) {\n//                 const li = document.createElement('li'); // создаем 'li'\n//                 li.textContent = category.list_name; // задаем текст категории\n//                 categoryList.appendChild(li); // добавляем елемент в список\n//             });\n//         })\n//         .catch(error => {\n//             console.error('Error fetching data;', error);\n//         })\n// });\n\n//!======== Шаг №4 ==== берем API из другого файла ==============================================\n// import { booksApi } from './render'; // импорт Api\n\n// document.addEventListener(\"DOMContentLoaded\", function () {\n\n//     const categoryList = document.getElementById(\"category-list\"); //сылка на список категорий\n//     booksApi().then(categories => { // используем функцию booksApi для получения данных\n//         categories.forEach(function (category) {\n//             const li = document.createElement('li'); // создаем 'li'\n//             li.textContent = category.list_name; // задаем текст категории\n//             categoryList.appendChild(li); // добавляем елемент в список\n//         });\n//     })\n//         .catch(error => {\n//             console.error('Error fetching data;', error);\n//         })\n// });\n\n//!======== Шаг №5 ==== названия категорий делаем кнопкой/ссылкой ==============================================\n\n// import { booksApi } from './render'; // импорт Api\n\n// document.addEventListener(\"DOMContentLoaded\", function () {\n\n//     const categoryList = document.getElementById(\"category-list\"); //сылка на список категорий\n//     booksApi().then(categories => {\n//         console.log(categories);\n//         categories.forEach(function (category) {\n//             const li = document.createElement('li');\n//             li.textContent = category.list_name; // задаем текст категории\n//             li.addEventListener('click', function () { // обработчик событий на клик\n//                 document.getElementById('container').innerHTML = ''; //Очищаем контейнер перед отображением новых данных\n//                 booksApibyCategory(category.list_name) // Получаем книги по выбранной категории\n//                     .then(books => { // Получаем книги по выбранной категории\n//                         books.forEach(book => {\n//                             const bookElement = document.createElement('div'); // Создаем элемент для каждой книги\n//                             bookElement.textContent = book.title; // или book.name что у нас в массиве?\n//                             document.getElementById('container').appendChild(bookElement);\n//                         });\n//                     });\n//             });\n\n//             categoryList.appendChild(li);\n//         });\n//     }).catch(error => {\n//         console.error('Error fetching data;', error);\n//     });\n// });\n\n//!======== Шаг №6 ==== меняем <li> на <p> === с комментарием ===========================================\n\n// import { booksApi } from './render';\n\n// document.addEventListener(\"DOMContentLoaded\", function () { // Слушаем событие загрузки DOM\n//     const categoryList = document.getElementById(\"category-list\"); // Получаем элемент списка категорий по его id\n\n//     booksApi().then(categories => { // Вызываем функцию booksApi, которая возвращает промис с категориями\n//         categories.forEach(function (category) { // Проходимся по каждой категории\n//             const paragraph = document.createElement('p'); // Используем тег р вместо li\n//             paragraph.textContent = category.list_name; // Задаем текст элемента р равным названию категории\n\n//             paragraph.addEventListener('click', function () {      // Добавляем обработчик клика на элемент р\n//                 document.getElementById('container').innerHTML = ''; // Очищаем содержимое элемента с id 'container'\n\n//                 booksApibyCategory(category.list_name).then(books => { // Вызываем функцию booksApibyCategory с названием категории в качестве аргумента\n//                     books.forEach(book => { // Перебираем каждую книгу в полученном списке книг\n//                         const bookElement = document.createElement('div'); // Создаем новый элемент div для отображения информации о книге\n//                         bookElement.textContent = book.title; // Задаем текст элемента равным названию книги\n//                         document.getElementById('container').appendChild(bookElement);  // Добавляем созданный элемент div в контейнер с id 'container'\n//                     });\n//                 });\n//             });\n\n//             categoryList.appendChild(paragraph); // Добавляем созданный элемент р в список категорий\n//         });\n//     }).catch(error => {\n//         console.error('Error fetching data;', error);\n//     });\n// });\n\n//!======== Шаг №6 ==== меняем <li> на <p> ===============================================\n\n// import { booksApi } from './render';\n\n// document.addEventListener(\"DOMContentLoaded\", function () {\n//     const categoryList = document.getElementById(\"category-list\");\n\n//     booksApi().then(categories => {\n//         categories.forEach(function (category) {\n//             const paragraph = document.createElement('p');\n//             paragraph.textContent = category.list_name;\n\n//             paragraph.addEventListener('click', function (event) {\n//                 event.preventDefault();\n//                 document.getElementById('container').innerHTML = '';\n//                 booksApibyCategory(category.list_name).then(books => {\n//                     books.forEach(book => {\n//                         const bookElement = document.createElement('div');\n//                         bookElement.textContent = book.title;\n//                         document.getElementById('container').appendChild(bookElement);\n//                     });\n//                 });\n//             });\n\n//             categoryList.appendChild(paragraph);\n//         });\n//     }).catch(error => {\n//         console.error('Error fetching data;', error);\n//     });\n// });\n\n//!======== Шаг №7 ==== добавл \"ALL CATEGORIES\" в начало списка  ===============================================\n\n// import { booksApi } from './render';\n// //import { loadBooks } from './render';// Внести в проект\n// document.addEventListener(\"DOMContentLoaded\", function () {\n//     const categoryList = document.getElementById(\"category-list\");\n\n//     const title = document.createElement('li');  // Создаем новый элемент 'li' для заголовка\n//     title.textContent = \"ALL CATEGORIES\";\n//     title.id = \"title\"; // присваиваем \"title\" свой id\n//     categoryList.appendChild(title); // Добавляем заголовок в начало списка категорий\n\n//     booksApi().then(categories => {\n//         categories.forEach(function (category) {\n//             const paragraph = document.createElement('p');\n//             paragraph.textContent = category.list_name;\n//             paragraph.id = \"p-list\";\n\n//             paragraph.addEventListener('click', function () {\n//                 document.getElementById('container').innerHTML = '';\n//                 booksApibyCategory(category.list_name).then(books => {\n//                     books.forEach(book => {\n//                         const bookElement = document.createElement('div');\n//                         bookElement.textContent = book.title;\n//                         document.getElementById('container').appendChild(bookElement);\n//                     });\n//                 });\n//             });\n\n//             categoryList.appendChild(paragraph); // Добавляем элемент в список внутри цикла\n//         });\n//     }).catch(error => {\n//         console.error('Error fetching data;', error);\n//     });\n// });\n\n//!======== Шаг №8 ==== замена перв addEventListener на window.onload == отрисовка списка <p> по новому ======================\n\n// import { booksApi } from './render';\n// import { loadBooks } from './render';\n// window.onload = function () {\n//     const categoryList = document.getElementById(\"category-list\"); //сылка на список категорий\n//     const title = document.createElement('li');\n//     title.textContent = \"ALL CATEGORIES\";\n//     title.id = \"title\";\n//     categoryList.appendChild(title);\n//     booksApi().then(categories => { // Вызываем функцию booksApi, которая возвращает промис с категориями\n//         categories.forEach(function (category) { // Проходимся по каждой категории\n//             const paragraph = document.createElement('p'); // создаем <p> для кажд элем списка\n//             paragraph.textContent = category.list_name;\n//             paragraph.id = \"p-list\";\n//             categoryList.appendChild(paragraph); // Добавляем элемент в список внутри цикла\n//         });\n//     }).catch(error => {\n//         console.error('Error fetching data;', error);\n//     });\n//     paragraph.addEventListener('click', loadBooks); //Вызываем функцию loadBooks при клике на элемент\n// };\n//!======== Шаг №9 ======= вернул paragraph.addEvent на место =========================================================================================\n\n// import { booksApi } from './render';\n// import { loadBooks } from './render';\n// window.onload = function () {\n//     const categoryList = document.getElementById(\"category-list\"); //сылка на список категорий\n//     const title = document.createElement('li');\n//     title.textContent = \"ALL CATEGORIES\";\n//     title.id = \"title\";\n//     categoryList.appendChild(title);\n//     booksApi().then(categories => { // Вызываем функцию booksApi, которая возвращает промис с категориями\n//         categories.forEach(function (category) { // Проходимся по каждой категории\n//             const paragraph = document.createElement('p'); // создаем <p> для кажд элем списка\n//             paragraph.textContent = category.list_name;\n//             paragraph.id = \"p-list\";\n//             paragraph.addEventListener('click', loadBooks); //Вызываем функцию loadBooks при клике на элемент\n//             categoryList.appendChild(paragraph); // Добавляем элемент в список внутри цикла\n//         });\n//     }).catch(error => {\n//         console.error('Error fetching data;', error);\n//     });\n// };\n\n//!======== Шаг №10 === добавл .active для смены цвета на <p> ========================================================\n\n// import { booksApi } from './render';\n// import { loadBooks } from './render';\n// window.onload = function () {\n//     const categoryList = document.getElementById(\"category-list\"); //сылка на список категорий\n//     const title = document.createElement('li');\n//     title.textContent = \"ALL CATEGORIES\";\n//     title.id = \"title\";\n//     categoryList.appendChild(title);\n//     booksApi().then(categories => { // Вызываем функцию booksApi, которая возвращает промис с категориями\n//         categories.forEach(function (category) {\n//             const paragraph = document.createElement('p');\n//             paragraph.textContent = category.list_name;\n//             paragraph.id = \"p-list\";\n//             categoryList.appendChild(paragraph);\n//             // обработчик событий 'click', который вызывает функцию 'loadBooks' и добавляет класс 'active'\n//             paragraph.addEventListener('click', function () {\n//                 paragraph.classList.add('active');\n//                 loadBooks();\n//             });\n//         });\n//     }).catch(error => {\n//         console.error('Error fetching data;', error);\n//     });\n// };\n//!======== Шаг №11 === добавл код от Марии =============================================\n\nimport { booksApi } from './render';\nimport { loadBooks } from './render';\n\nconst categoryBlock = document.querySelector(\"#category-list\"); // Получаем элемент с id \"category-list\"\nexport default categoryBlock; // Экспортируем categoryBlock как default\n\nwindow.onload = function () { // Когда окно загрузится, выполниться следующая функция\n    const myCategoryList = document.getElementById(\"category-list\"); // Получаем элемент с id \"category-list\"\n    const title = document.createElement('li'); // Создаем новый элемент списка 'li'\n    title.textContent = \"ALL CATEGORIES\"; // Устанавливаем текст элемента\n    title.id = \"title\"; // Устанавливаем id элемента\n    myCategoryList.appendChild(title); // Добавляем созданный элемент в список\n    booksApi().then(categories => {  // Вызываем функцию booksApi и обрабатываем промис\n        categories.forEach(function (category) { // Для каждой категории выполняем функцию\n            const paragraph = document.createElement('p'); // создаем <p> для кажд элем списка\n            paragraph.textContent = category.list_name; // Устанавливаем текст элемента равным имени категории\n            paragraph.id = \"p-list\"; // Устанавливаем id элемента\n            paragraph.addEventListener('click', loadBooks); //Вызываем функцию loadBooks при клике на элемент\n            myCategoryList.appendChild(paragraph); // Добавляем созданный элемент в список\n        });\n    }).catch(error => {\n        console.error('Error fetching data;', error);\n    });\n};","const themeToggle = document.getElementById(\"theme-toggle\");\nconst body = document.body;\n\nthemeToggle.addEventListener(\"change\", () => {\n    if (themeToggle.checked) {\n        body.classList.add(\"dark\");\n        body.classList.remove(\"light\");\n    } else {\n        body.classList.add(\"light\");\n        body.classList.remove(\"dark\");\n    }\n});\n\n//=================================menu===============//\n\n\n(() => {\n    const mobileMenu = document.querySelector('.js-menu-container');\n    const openMenuBtn = document.querySelector('.js-open-menu');\n    const closeMenuBtn = document.querySelector('.js-close-menu');\n    const closeMenuLink = document.querySelectorAll('.header-link');\n\n    const toggleMenu = () => {\n        const isMenuOpen =\n            openMenuBtn.getAttribute('aria-expanded') === 'true' || false;\n        openMenuBtn.setAttribute('aria-expanded', !isMenuOpen);\n        mobileMenu.classList.toggle('is-open');\n\n        const scrollLockMethod = !isMenuOpen\n            ? 'disableBodyScroll'\n            : 'enableBodyScroll';\n        bodyScrollLock[scrollLockMethod](document.body);\n    };\n    closeMenuLink.forEach(item => item.addEventListener('click', toggleMenu));\n    openMenuBtn.addEventListener('click', toggleMenu);\n    closeMenuBtn.addEventListener('click', toggleMenu);\n\n    // Close the mobile menu on wider screens if the device orientation changes\n    window.matchMedia('(min-width: 768px)').addEventListener('change', e => {\n        if (!e.matches) return;\n        mobileMenu.classList.remove('is-open');\n        openMenuBtn.setAttribute('aria-expanded', false);\n        bodyScrollLock.enableBodyScroll(document.body);\n    });\n})();"],"names":["booksApi","BASE_URL","options","axios","loadBooks","category","myCategoryList","title","categories","paragraph","error","themeToggle","body","mobileMenu","openMenuBtn","closeMenuBtn","closeMenuLink","toggleMenu","isMenuOpen","scrollLockMethod","item","e"],"mappings":"ivBAEO,eAAeA,GAAW,CAC7B,MAAMC,EAAW,0DAIXC,EAAU,CACZ,OAAQ,KAChB,EAGI,OADY,MAAMC,EAAM,IAAI,GAAGF,CAAQ,GAAIC,CAAO,GACvC,IACf,CAEA,QAAQ,IAAIF,EAAQ,CAAE,EAEf,eAAeI,EAAUC,EAAU,CACtC,MAAMJ,EAAW,qDAEXC,EAAU,CACZ,OAAQ,MACR,OAAQ,CACJ,SAAUG,CACb,CACT,EAGI,OADY,MAAMF,EAAM,IAAIF,EAAUC,CAAO,GAClC,IACf,CAEA,QAAQ,IAAIE,EAAU,sCAAsC,CAAC,ECgPvC,SAAS,cAAc,gBAAgB,EAG7D,OAAO,OAAS,UAAY,CACxB,MAAME,EAAiB,SAAS,eAAe,eAAe,EACxDC,EAAQ,SAAS,cAAc,IAAI,EACzCA,EAAM,YAAc,iBACpBA,EAAM,GAAK,QACXD,EAAe,YAAYC,CAAK,EAChCP,EAAU,EAAC,KAAKQ,GAAc,CAC1BA,EAAW,QAAQ,SAAUH,EAAU,CACnC,MAAMI,EAAY,SAAS,cAAc,GAAG,EAC5CA,EAAU,YAAcJ,EAAS,UACjCI,EAAU,GAAK,SACfA,EAAU,iBAAiB,QAASL,CAAS,EAC7CE,EAAe,YAAYG,CAAS,CAChD,CAAS,CACT,CAAK,EAAE,MAAMC,GAAS,CACd,QAAQ,MAAM,uBAAwBA,CAAK,CACnD,CAAK,CACL,ECnSA,MAAMC,EAAc,SAAS,eAAe,cAAc,EACpDC,EAAO,SAAS,KAEtBD,EAAY,iBAAiB,SAAU,IAAM,CACrCA,EAAY,SACZC,EAAK,UAAU,IAAI,MAAM,EACzBA,EAAK,UAAU,OAAO,OAAO,IAE7BA,EAAK,UAAU,IAAI,OAAO,EAC1BA,EAAK,UAAU,OAAO,MAAM,EAEpC,CAAC,GAKA,IAAM,CACH,MAAMC,EAAa,SAAS,cAAc,oBAAoB,EACxDC,EAAc,SAAS,cAAc,eAAe,EACpDC,EAAe,SAAS,cAAc,gBAAgB,EACtDC,EAAgB,SAAS,iBAAiB,cAAc,EAExDC,EAAa,IAAM,CACrB,MAAMC,EACFJ,EAAY,aAAa,eAAe,IAAM,QAAU,GAC5DA,EAAY,aAAa,gBAAiB,CAACI,CAAU,EACrDL,EAAW,UAAU,OAAO,SAAS,EAErC,MAAMM,EAAoBD,EAEpB,mBADA,oBAEN,eAAeC,CAAgB,EAAE,SAAS,IAAI,CACtD,EACIH,EAAc,QAAQI,GAAQA,EAAK,iBAAiB,QAASH,CAAU,CAAC,EACxEH,EAAY,iBAAiB,QAASG,CAAU,EAChDF,EAAa,iBAAiB,QAASE,CAAU,EAGjD,OAAO,WAAW,oBAAoB,EAAE,iBAAiB,SAAUI,GAAK,CAC/DA,EAAE,UACPR,EAAW,UAAU,OAAO,SAAS,EACrCC,EAAY,aAAa,gBAAiB,EAAK,EAC/C,eAAe,iBAAiB,SAAS,IAAI,EACrD,CAAK,CACL,GAAI"}